from flatworld.functions.algorithm_dinic import calculate_cost
import pytest

@pytest.mark.parametrize(
        "hull_points, world_points, pairs, neighbors, expected",
        [
            (
                [[72, -197], [-10, -191], [-171, -160], [-115, 3], [22, 176], [71, 162], [186, 114], [154, -199], [72, -197]],
                [[154, -199], [-171, -160], [136, -193], [-105, -102], [22, 176], [-76, -112], [71, 162], [45, -143], [-115, 3], [108, 130], [-94, 15], [-101, -147], [31, -96], [72, -197], [-10, -191], [107, -143], [186, 114]],
                9,
                [[0, 2, 114], [0, 15, 51], [0, 13, 118], [0, 6, 65], [0, 12, 51], [13, 10, 239], [13, 17, 261], [13, 11, 167], [13, 6, 108], [13, 16, 89], [13, 15, 103], [13, 8, 49], [6, 11, 128], [6, 12, 43], [6, 4, 31], [12, 2, 71], [12, 4, 45], [10, 5, 98], [10, 11, 232], [10, 17, 80], [10, 7, 49], [11, 5, 198], [11, 9, 24], [11, 4, 118], [16, 1, 73], [16, 17, 269], [16, 8, 62], [16, 3, 58], [16, 14, 64], [8, 15, 73], [8, 14, 60], [4, 9, 105], [4, 2, 88], [3, 14, 64], [3, 1, 19]],
                33851.56
            )
        ]
)
def test_cost(hull_points, world_points, pairs, neighbors, expected):
    cost = calculate_cost(hull_points, world_points, pairs, neighbors)
    assert round(cost, 2) == expected